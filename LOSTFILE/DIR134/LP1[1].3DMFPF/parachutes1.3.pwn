////////////////////////////////////////////////////////////////////////////////
// 				Series: Parachutes                                            //
// 				Version: 1.3                                                  //
// 				Title: LuxurY Death Match Free Parachuting and Flying (DMFPF) //
// 				Creator: ToxaOZ (LuxurY scripter)                             //
//             	Date: 28 March 2007 year                                      //
////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////Includes///////////////////////////////////
#include <a_samp>
#include <dini>

//----------------------------------------------------------------------------//

/////////////////////////////////////Colors/////////////////////////////////////
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33FF33AA
#define COLOR_RED 0xFF0000AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_BLUE 0x0000BBAA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_ORANGE 0xFF9900AA
//----------------------------------------------------------------------------//

////////////////////////////////////Checkpoints/////////////////////////////////
#define CHECKPOINT_NONE 0
#define CHECKPOINT_A 1
//----------------------------------------------------------------------------//

//////////////////////////////////////Prices////////////////////////////////////
#define PocketMoney 1180
#define KillMoney 2000
#define CarMoney 20
#define ParachutePrice 30
#define HealPrice 1000
#define PolicePrice 10000
#define ThiefPrice 10000
#define GangstaPrice 15000
#define FiremanPrice 10000
#define BitchPrice 13000
#define MatrixPrice 20000
#define WorkerPrice 19000
//----------------------------------------------------------------------------//

//////////////////////////////////FOR GANG SYSTEM///////////////////////////////

//defines
#define MAX_GANGS 			32
#define MAX_GANG_MEMBERS	6
#define MAX_GANG_NAME       16
#define MAX_GV          	2

//new
new gangMembers[MAX_GANGS][MAX_GANG_MEMBERS];
new gangNames[MAX_GANGS][MAX_GANG_NAME];
new gangInfo[MAX_GANGS][3];
new gangBank[MAX_GANGS];
new playerGang[MAX_PLAYERS];
new gangInvite[MAX_PLAYERS];
new bank[MAX_PLAYERS];
new moneys;
new GangVehicles[MAX_GV][2] = {
	{1,2},
	{3,4}
	};
//----------------------------------------------------------------------------//


main()
{
    print("\n--------------------------------------------");
	print("  Loaded LuxurY Parachute DMFPF Map v.1.3\n");
	print("--------------------------------------------\n");
}
//Players, Vehicles, Pickups.
public OnGameModeInit(i)
{
    SetGameModeText("LuxurY DMFPF Map v1.3");
    ShowPlayerMarkers(1);
    ShowNameTags(1);
    SetWorldTime(9);
    
    
/////////////////////////////////////Players////////////////////////////////////

    AddPlayerClass(60,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
    AddPlayerClass(280,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(281,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(282,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(283,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(284,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(285,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(286,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(287,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(254,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(255,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(256,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(257,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(258,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(259,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(260,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(261,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(262,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(263,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(264,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(274,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(275,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(276,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(1,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(2,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(290,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(291,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(292,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(293,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(294,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(295,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(296,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(297,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(298,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
    AddPlayerClass(299,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(277,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(278,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(279,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(288,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(47,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(48,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(49,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(50,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(51,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(52,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(53,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(54,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(55,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(56,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(57,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(58,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(59,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(61,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(62,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(63,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(64,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(66,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(67,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(68,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(69,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(70,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(71,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(72,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(73,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(75,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(76,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(78,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(79,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(80,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(81,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(82,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(83,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(84,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(85,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(87,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(88,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(89,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(91,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(92,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(93,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(95,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(96,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(97,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(98,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(99,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(100,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(101,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(102,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(103,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(104,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(105,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(106,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(107,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(108,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(109,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(110,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(111,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(112,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(113,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(114,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(115,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(116,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(117,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(118,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(120,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(121,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(122,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(123,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(124,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(125,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(126,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(127,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(128,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(129,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(131,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(133,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(134,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(135,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(136,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(137,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(138,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(139,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(140,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(141,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(142,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(143,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(144,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(145,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(146,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(147,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(148,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(150,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(151,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(152,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(153,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(154,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(155,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(156,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(157,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(158,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(159,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(160,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(161,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(162,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(163,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(164,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(165,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(166,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(167,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(168,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(169,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(170,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(171,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(172,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(173,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(174,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(175,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(176,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(177,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(178,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(179,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(180,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(181,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(182,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(183,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(184,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(185,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(186,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(187,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(188,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(189,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(190,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(191,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(192,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(193,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(194,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(195,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(196,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(197,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(198,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(199,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(200,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(201,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(202,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(203,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(204,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(205,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(206,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(207,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(209,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(210,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(211,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(212,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(213,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(214,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(215,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(216,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(217,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(218,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(219,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(220,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(221,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(222,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(223,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(224,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(225,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(226,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(227,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(228,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(229,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(230,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(231,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(232,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(233,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(234,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(235,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(236,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(237,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(238,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(239,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(240,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(241,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(242,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(243,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(244,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(245,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(246,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(247,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(248,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(249,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(250,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(251,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
	AddPlayerClass(253,1544.7419,-1345.5216,329.4662,179.4227,5,1,22,70,46,1); //
//----------------------------------------------------------------------------//
	
//////////////////////////////////////The Top///////////////////////////////////

	//vehicles
    AddStaticVehicle(429,1564.3589,-1325.5747,16.1621,356.3140,1,2); // 
    AddStaticVehicle(522,1556.5643,-1365.8485,329.0145,1.6013,8,82); // 
    AddStaticVehicle(522,1555.2181,-1365.9808,329.0260,358.7986,6,25); // 
    AddStaticVehicle(522,1553.9658,-1366.0735,329.0256,1.3500,3,3); // 
    AddStaticVehicle(522,1552.4867,-1366.0503,329.0280,0.0461,39,106); // 
    AddStaticVehicle(522,1539.4030,-1365.6731,329.0214,0.3037,6,25); // 
    AddStaticVehicle(522,1537.8910,-1365.5643,329.0382,1.0699,8,82); // 
    AddStaticVehicle(522,1536.4104,-1365.8241,329.0305,0.6659,39,106); // 
    AddStaticVehicle(522,1534.9572,-1365.6804,329.0226,359.7255,3,3); // 
    AddStaticVehicle(522,1533.6213,-1365.5748,329.0254,357.3893,6,25); // 
    AddStaticVehicle(522,1532.3281,-1365.5011,329.0255,359.9042,8,82); // 
    AddStaticVehicle(468,1550.4568,-1362.3944,329.1310,359.1243,53,53); // 
    AddStaticVehicle(468,1549.1387,-1362.4325,329.1278,1.5913,6,6); // 
    AddStaticVehicle(468,1547.6479,-1362.3912,329.1273,358.8114,53,53); // 
    AddStaticVehicle(468,1546.1198,-1362.5022,329.1277,358.8024,6,6); // 
    AddStaticVehicle(468,1544.6145,-1362.3761,329.1274,6.0698,53,53); // 
    AddStaticVehicle(468,1543.1134,-1362.4342,329.1280,5.2035,6,6); //
    
   	//top parashutes
    AddStaticPickup(371,2,1544.9708,-1371.0781,329.4535); //
	AddStaticPickup(371,2,1544.9708,-1372.0781,329.4535); //
	AddStaticPickup(371,2,1544.9708,-1370.0781,329.4535); //
//	AddStaticPickup(371,2,1545.9708,-1371.0781,329.4535); //
//	AddStaticPickup(371,2,1543.9708,-1372.0781,329.4535); //
//	AddStaticPickup(371,2,1543.9708,-1370.0781,329.4535); //
//	AddStaticPickup(371,2,1543.9708,-1371.0781,329.4535); //
//	AddStaticPickup(371,2,1545.9708,-1372.0781,329.4535); //
//	AddStaticPickup(371,2,1545.9708,-1370.0781,329.4535); //
//	AddStaticPickup(371,2,1544.8719,-1271.0751,250.6531); //
	AddStaticPickup(371,2,1544.8719,-1269.0751,250.6531); //
	AddStaticPickup(371,2,1544.8719,-1268.0751,250.6531); //
	AddStaticPickup(371,2,1543.8719,-1267.0751,250.6531); //
//	AddStaticPickup(371,2,1542.8719,-1266.0751,250.6531); //
//	AddStaticPickup(371,2,1542.8719,-1265.0751,250.6531); //
//----------------------------------------------------------------------------//
    
//////////////////////////////////Las Venturas Airport//////////////////////////

	//parachutes1.2
	AddStaticVehicle(447,390.6350,2532.5154,16.5527,178.3156,75,2); //
	AddStaticVehicle(447,383.6664,2532.5027,16.5651,179.8690,75,2); //
	AddStaticVehicle(447,377.1943,2532.1394,16.6187,179.8724,75,2); //
	AddStaticVehicle(425,365.3115,2537.3054,17.2154,179.2011,43,0); //
	AddStaticVehicle(447,354.5330,2531.7253,16.7294,178.9618,75,2); //
	AddStaticVehicle(447,348.2133,2531.8137,16.7854,177.0673,75,2); //
	//spawn
	AddStaticVehicle(513,428.5563,2485.0439,17.0463,85.7402,48,18); //
	AddStaticVehicle(513,428.8805,2494.1980,17.0567,88.2531,54,34); //
	AddStaticVehicle(513,429.2117,2503.5916,17.0310,85.2587,38,51); //
	AddStaticVehicle(513,429.4439,2512.8640,17.0590,88.7408,55,20); //
	AddStaticVehicle(513,429.6393,2522.1782,17.0654,88.5396,21,36); //
	AddStaticVehicle(476,326.0663,2539.5161,17.5249,178.8950,103,102); //
	AddStaticVehicle(476,290.2637,2541.4739,17.5144,178.4310,71,77); //
	AddStaticVehicle(520,364.7530,2468.7881,17.2077,357.7746,0,0); //
	AddStaticVehicle(520,349.3056,2468.4136,17.2077,357.8455,0,0); //
	AddStaticVehicle(520,336.1044,2468.4255,17.1989,0.9556,0,0); //
	AddStaticVehicle(520,306.3188,2467.3218,17.1963,9.6506,0,0); //
	AddStaticVehicle(520,288.2148,2466.7507,17.1992,7.8008,0,0); //
	AddStaticVehicle(520,273.2215,2466.4521,17.1992,1.6878,0,0); //
	AddStaticVehicle(511,401.8144,2466.3618,17.8738,0.5508,8,66); //

	//parachutes
	AddStaticPickup(371,2,377.1383,2473.3152,16.4844); //
	AddStaticPickup(371,2,377.1383,2471.3152,16.4844); //
	AddStaticPickup(371,2,377.2655,2469.3152,16.4844); //
//	AddStaticPickup(371,2,377.2655,2467.3152,16.4844); //
//	AddStaticPickup(371,2,377.2655,2465.3152,16.4844); //
//	AddStaticPickup(371,2,377.2655,2463.3152,16.4844); //
	
	AddStaticVehicle(519,33.9052,2539.3096,17.3419,180.2206,1,1); //
	AddStaticVehicle(519,9.8581,2538.4639,17.3122,173.6617,1,1); //
	AddStaticVehicle(553,-66.2729,2501.9888,17.8203,268.7862,98,114); //
	AddStaticVehicle(556,353.8730,2553.6914,16.9943,177.5359,1,1); //
	AddStaticVehicle(556,359.7614,2553.4648,16.9356,178.9548,1,1); //
	AddStaticVehicle(556,365.4006,2553.5029,16.9408,179.7894,1,1); //
	AddStaticVehicle(556,371.9520,2553.7222,16.9373,181.3696,1,1); //
	AddStaticVehicle(556,378.4453,2553.7395,16.9320,180.1457,1,1); //
	AddStaticVehicle(556,384.9512,2553.8516,16.9242,179.7010,1,1); //



//----------------------------------------------------------------------------//

///////////////////////////////////Los Santos Airport///////////////////////////

	//planes forward
	AddStaticVehicle(476,2134.2515,-2607.5984,14.2770,88.1945,89,91); //
	AddStaticVehicle(476,2136.3022,-2592.5166,14.2575,86.2494,103,102); //
	AddStaticVehicle(476,2137.6167,-2578.8423,14.2733,81.8980,71,77); //
	AddStaticVehicle(476,2139.4456,-2563.8945,14.2567,84.5806,7,6); //
	AddStaticVehicle(476,2140.0063,-2548.4763,14.2549,89.6986,89,91); //
	AddStaticVehicle(476,2140.2632,-2531.9688,14.2502,92.4433,103,102); //
	AddStaticVehicle(476,2140.2463,-2517.0330,14.2570,90.1308,71,77); //
	AddStaticVehicle(476,2140.9763,-2501.3999,14.2633,89.8671,7,6); //
	AddStaticVehicle(476,2141.2822,-2486.7656,14.2613,89.1747,89,91); //

	//little plane
	AddStaticVehicle(513,2067.0571,-2620.2024,14.0982,358.7335,55,20); //
	AddStaticVehicle(513,2056.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,2047.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,2038.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,2029.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,2020.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,2011.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,2002.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1993.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1984.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1975.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1966.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1957.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1948.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1939.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1930.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1921.1479,-2620.2024,14.0986,3.3382,51,6); //
	AddStaticVehicle(513,1918.1479,-2620.2024,14.0986,3.3382,51,6); //

	//sparrow
	AddStaticVehicle(447,1902.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1894.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1886.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1878.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1870.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1862.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1854.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1846.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1838.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1830.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1822.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1814.7124,-2618.8086,13.5675,357.4954,75,2); //
	
	AddStaticVehicle(447,1806.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1798.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1790.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1782.7124,-2618.8086,13.5675,357.4954,75,2); //
	AddStaticVehicle(447,1774.7124,-2618.8086,13.5675,357.4954,75,2); //
	
	//parachutes
	AddStaticPickup(371,2,1766.7124,-2618.8086,13.5675); //
	AddStaticPickup(371,2,1763.7124,-2618.8086,13.5675); //
	AddStaticPickup(371,2,1760.7124,-2618.8086,13.5675); //
	AddStaticPickup(371,2,1757.7124,-2618.8086,13.5675); //


	//big planes
	AddStaticVehicle(511,1739.0126,-2621.1006,14.9221,1.2372,12,60); //
	AddStaticVehicle(511,1716.0126,-2621.1006,14.9221,1.2372,12,60); //
	AddStaticVehicle(511,1693.0126,-2621.1006,14.9221,1.2372,12,60); //
	AddStaticVehicle(511,1670.0126,-2621.1006,14.9221,1.2372,12,60); //
	AddStaticVehicle(511,1647.0126,-2621.1006,14.9221,1.2372,12,60); //
	AddStaticVehicle(511,1624.0126,-2621.1006,14.9221,1.2372,12,60); //
	AddStaticVehicle(511,1599.8988,-2621.4700,14.8920,359.5268,7,68); //
	AddStaticVehicle(511,1576.8988,-2621.4700,14.8920,359.5268,7,68); //
	AddStaticVehicle(511,1553.8988,-2621.4700,14.8920,359.5268,7,68); //
	AddStaticVehicle(511,1530.8988,-2621.4700,14.8920,359.5268,7,68); //



	//cars
	AddStaticVehicle(477,1677.2356,-2560.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2555.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2550.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2545.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2540.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2535.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2530.4131,13.3019,268.8127,0,1); //
	AddStaticVehicle(477,1677.2356,-2525.4131,13.3019,268.8127,0,1); //


	//shamal
	AddStaticVehicle(519,1643.6774,-2417.2246,14.4767,178.7643,1,1); //
	AddStaticVehicle(519,1728.1953,-2413.7390,14.4735,179.3654,1,1); //
	AddStaticVehicle(519,1562.8358,-2409.6230,14.4733,180.3640,1,1); //

	//biggest plane
	AddStaticVehicle(592,1792.5907,-2494.4846,14.7513,89.7037,1,1); //

	//very big plane
	AddStaticVehicle(553,1814.8221,-2592.8130,14.8835,89.6243,61,74); //

	//hydra
	AddStaticVehicle(520,1852.0447,-2528.5679,14.2701,271.5201,0,0); //
	AddStaticVehicle(520,1851.4088,-2543.5200,14.2701,270.5417,0,0); //
	AddStaticVehicle(520,1850.3875,-2559.1016,14.2701,269.8830,0,0); //
//----------------------------------------------------------------------------//
    
///////////////////////////////San Fiero Airport////////////////////////////////

	//very big plane
	AddStaticVehicle(553,-1353.3622,-238.5171,15.4827,315.1148,102,119); //

	//shamal
	AddStaticVehicle(519,-1330.2560,-270.7715,15.0672,301.2492,1,1); //
	AddStaticVehicle(519,-1385.1591,-222.7895,15.0702,327.8242,1,1); //

	//little planes
	AddStaticVehicle(513,-1189.2324,-149.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1197.2324,-142.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1205.2324,-135.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1213.2324,-128.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1221.2324,-121.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1229.2324,-114.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1237.2324,-107.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1245.2324,-100.0296,14.6922,136.4893,51,6); //
	AddStaticVehicle(513,-1253.2324,-93.0296,14.6922,136.4893,51,6); //


	//cars
	AddStaticVehicle(541,-1249.4047,29.6217,13.7729,136.1900,36,8); //
	AddStaticVehicle(541,-1252.4047,32.6217,13.7729,136.5450,36,8); //
	AddStaticVehicle(541,-1255.4047,35.6217,13.7729,136.5450,36,8); //
	AddStaticVehicle(541,-1258.4047,38.6217,13.7729,136.5450,36,8); //


	//very big plane
	AddStaticVehicle(553,-1649.4609,-157.1432,15.4986,314.6369,102,119); //


	//planes
	AddStaticVehicle(476,-1464.7542,-204.6683,14.8562,74.8880,119,117); //
	AddStaticVehicle(476,-1460.7542,-191.6683,14.8562,74.8880,77,87); //
	AddStaticVehicle(476,-1456.7542,-178.6683,14.8562,74.8880,77,87); //
	AddStaticVehicle(476,-1452.7542,-165.6683,14.8562,74.8880,77,87); //
	AddStaticVehicle(476,-1448.7542,-152.6683,14.8562,74.8880,77,87); //
	AddStaticVehicle(476,-1444.7542,-139.6683,14.8562,74.8880,77,87); //

	//sparrow
	AddStaticVehicle(447,-1322.6198,-349.8092,14.1602,197.2884,75,2); //
	AddStaticVehicle(447,-1313.6198,-347.8092,14.1602,197.2884,75,2); //
	AddStaticVehicle(447,-1304.6198,-345.8092,14.1602,197.2884,75,2); //
	AddStaticVehicle(447,-1295.6198,-343.8092,14.1602,197.2884,75,2); //
	AddStaticVehicle(447,-1286.6198,-341.8092,14.1602,197.2884,75,2); //
	AddStaticVehicle(447,-1277.6198,-339.8092,14.1602,197.2884,75,2); //


	//motos
	AddStaticVehicle(522,-1249.1733,14.4654,13.7194,226.2080,36,105); //
	AddStaticVehicle(522,-1248.1733,15.4654,13.7197,226.2080,36,105); //
	AddStaticVehicle(522,-1247.1733,16.4654,13.7197,226.2080,36,105); //
	AddStaticVehicle(522,-1246.1733,17.4654,13.7197,226.2080,36,105); //
	AddStaticVehicle(522,-1245.1733,18.4654,13.7197,226.2080,36,105); //
	AddStaticVehicle(522,-1244.1733,19.4654,13.7197,226.2080,36,105); //
	AddStaticVehicle(522,-1243.1733,20.4654,13.7197,226.2080,36,105); //

	//kargobobs
	AddStaticVehicle(548,-1271.6501,-613.4039,15.8327,0.1662,1,1); //
	AddStaticVehicle(548,-1459.5337,-616.1799,15.7952,0.1123,1,1); //

	//hunters
	AddStaticVehicle(425,-1392.2639,-618.1925,14.7199,353.9592,43,0); //
	AddStaticVehicle(425,-1334.5045,-617.8083,14.7196,357.5114,43,0); //

	//dronts
	AddStaticVehicle(593,-1361.4570,-493.3527,14.6355,205.5154,22,1); //
	AddStaticVehicle(593,-1435.5891,-534.0945,14.6286,207.0179,51,1); //
//----------------------------------------------------------------------------//
    
//////////////////////////////////Mini Jumps////////////////////////////////////

	AddStaticVehicle(513,1972.2292,1916.2155,131.4937,271.3517,51,6); //
	AddStaticVehicle(513,1960.6072,1922.9780,131.4830,26.5629,21,36); //
	//1

	//2
	AddStaticVehicle(519,2058.0974,2413.5496,151.3966,179.8693,1,1); //

	//parashutes
	AddStaticPickup(371,2,2066.9497,2438.4580,165.6172); //
	AddStaticPickup(371,2,2066.9497,2437.4580,165.6172); //
	AddStaticVehicle(513,2052.5713,2438.2693,166.1628,356.1680,30,34); //

	//5
	AddStaticVehicle(513,1666.8397,-1264.6532,233.9333,180.2191,38,51); //
	AddStaticVehicle(513,1666.5900,-1226.5017,233.9166,1.1195,21,34); //
//----------------------------------------------------------------------------//

///////////////////////////////////Mountain/////////////////////////////////////

	//tramplin
	AddStaticVehicle(443,-2287.5222,-1635.5018,484.2834,247.0336,40,1); //
	
	//moto
	AddStaticVehicle(522,-2350.9346,-1604.0955,483.1795,258.2596,36,105); //
	AddStaticVehicle(522,-2351.2844,-1605.5248,483.1905,257.4046,51,118); //
	AddStaticVehicle(522,-2351.7139,-1607.0278,483.1883,256.5835,7,79); //
	AddStaticVehicle(522,-2352.0996,-1608.4678,483.1888,259.2657,7,79); //
	AddStaticVehicle(522,-2352.4592,-1609.9456,483.1966,255.5298,3,8); //
	AddStaticVehicle(522,-2352.8574,-1611.4816,483.1940,257.5283,51,118); //
	AddStaticVehicle(522,-2353.2080,-1613.0172,483.1982,257.3230,36,105); //
	AddStaticVehicle(522,-2353.5684,-1614.4786,483.2089,255.6834,51,118); //
	AddStaticVehicle(522,-2353.9092,-1615.8948,483.2113,255.9762,3,8); //
	AddStaticVehicle(522,-2354.3813,-1617.3557,483.2113,254.2307,7,79); //
	AddStaticVehicle(522,-2354.8494,-1618.8301,483.2184,257.9865,36,105); //
	
	//bmx
	AddStaticVehicle(510,-2356.7334,-1624.6176,483.2774,257.2803,5,5); //
	AddStaticVehicle(510,-2356.9517,-1625.6993,483.2798,260.2283,16,16); //
	AddStaticVehicle(510,-2357.1343,-1626.7119,483.2829,263.7057,39,39); //
	AddStaticVehicle(481,-2357.3201,-1627.5737,483.1938,259.7842,1,1); //
	AddStaticVehicle(481,-2357.5474,-1628.5183,483.1950,260.6547,12,9); //
	AddStaticVehicle(510,-2357.7085,-1629.5569,483.2913,263.2578,16,16); //
	AddStaticVehicle(510,-2357.8804,-1630.5238,483.2945,266.5699,43,43); //
	AddStaticVehicle(510,-2358.1113,-1631.4080,483.2971,269.7322,5,5); //
	
	//sanchez
	AddStaticVehicle(468,-2242.5562,-1707.5638,480.2549,137.3745,3,3); //
	AddStaticVehicle(468,-2243.6003,-1706.3993,480.2839,135.4852,46,46); //
	AddStaticVehicle(468,-2244.6963,-1705.4043,480.3004,137.5380,3,3); //
	AddStaticVehicle(468,-2245.7659,-1704.3098,480.3265,133.2426,46,46); //
	AddStaticVehicle(468,-2246.9565,-1703.2561,480.3429,138.2704,3,3); //
	AddStaticVehicle(468,-2248.0947,-1702.0959,480.3704,136.8014,46,46); //
	
	//quadrocicle
	AddStaticVehicle(471,-2250.1118,-1700.0825,480.2269,139.1136,120,113); //
	AddStaticVehicle(471,-2251.6448,-1698.7347,480.2458,135.8302,120,114); //
	AddStaticVehicle(471,-2253.2317,-1697.2393,480.2742,136.0466,120,117); //
	
	//patriot
	AddStaticVehicle(470,-2264.7769,-1688.9618,480.7976,135.1246,43,0); //
	
	//sandking
	AddStaticVehicle(495,-2261.3748,-1691.9182,481.1133,137.6813,123,124); //
	
	//fastcar
	AddStaticVehicle(494,-2258.9600,-1695.3175,480.5243,138.6123,36,117); //
	
	//elitecar
	AddStaticVehicle(409,-2345.0779,-1597.1703,483.4238,243.4097,1,1); //

	//bigfoot
	AddStaticVehicle(556,-2341.9099,-1656.7512,484.0782,301.8719,1,1); //
	AddStaticVehicle(556,-2339.5732,-1660.9095,484.0781,303.2215,1,1); //
	AddStaticVehicle(556,-2336.9792,-1664.9357,483.9506,300.6680,1,1); //
	AddStaticVehicle(556,-2334.3752,-1669.3574,483.6545,301.2012,1,1); //

	//mountain parachutes
	AddStaticPickup(371,2,-2237.2869,-1711.1473,480.8768); //
	AddStaticPickup(371,2,-2237.2869,-1712.1473,480.8768); //
	AddStaticPickup(371,2,-2237.2869,-1713.1473,480.8768); //
	AddStaticPickup(371,2,-2237.2869,-1714.1473,480.8768); //
	AddStaticPickup(371,2,-2237.2869,-1715.1473,480.8768); //
	AddStaticPickup(371,2,-2237.2869,-1716.1473,480.8768); //
	AddStaticPickup(371,2,-2237.2869,-1717.1473,480.8768); //
	
	//other pickups
	AddStaticPickup(336,2,-2239.7642,-1749.5736,480.8814); //
	AddStaticPickup(336,2,-2238.7642,-1748.5736,480.8814); //
	AddStaticPickup(338,2,-2259.1069,-1739.1023,487.4290); //
//----------------------------------------------------------------------------//

    return 1;
}


////////////////////////////////////////////////////////////////////////////////

public OnPlayerConnect(playerid)
{
    SendClientMessage(playerid, 0x00FF00AA, "Dizzy jumps for you!");
    SendClientMessage(playerid, 0xFFFF00AA, "Type /infmod for information and commands");
	GameTextForPlayer(playerid, "Wellcome to ~b~the Parachute ~r~DMFPF Map!!!", 5000, 5);

    return 1;
}

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

public OnPlayerRequestClass(playerid, classid)
{
    SetPlayerCameraPos(playerid, 1544.7419,-1338.5216,329.4662);
    SetPlayerPos(playerid, 1544.7419,-1345.5216,329.4662);
    SetPlayerFacingAngle(playerid, 0.0);
    SetPlayerCameraLookAt(playerid, 1544.7419,-1345.5216,329.4662);
    return 1;
}

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

public OnPlayerSpawn(playerid)
{
 	SetPlayerScore(playerid,0); //reset player score
	ResetPlayerMoney(playerid); //reset money on spawn
	GivePlayerMoney(playerid,PocketMoney); //give money on spawn
    SetPlayerInterior(playerid,0);
    SetPlayerColor(0, 0x33AA33AA);
	SetPlayerColor(1, 0xAA3333AA);
	SetPlayerColor(2, 0xFFFF00AA);
	SetPlayerColor(3, 0xFF9900AA);
	SetPlayerColor(4, 0x0000BBAA);
	SetPlayerColor(5, 0xFFFFFFAA);
	SetPlayerColor(6, 0x33CCFFAA);
	SetPlayerColor(7, 0xAFAFAFAA);
	SetPlayerColor(8, 0xFF66FFAA);
	SetPlayerColor(9, 0x00BFF3AA);
	SetPlayerColor(10, 0x4B00B0AA);
	SetPlayerColor(11, 0xFFFFFFFF);
	SetPlayerColor(12, 0x8080FFAA);
	SetPlayerColor(13, 0xFF0000AA);
	SetPlayerColor(14, 0xD0D0FFAA);
	SetPlayerColor(15, 0x0066CCAA);
	SetPlayerColor(16, 0x10F441AA);
	SetPlayerColor(17, 0xFF00FFFF);
	SetPlayerColor(18, 0x000080AA);
	SetPlayerColor(19, 0xF0F8FFAA);
	SetPlayerColor(20, 0xDC143CAA);
	SetPlayerColor(21, 0x6495EDAA);
	SetPlayerColor(22, 0xFFE4C4AA);
	SetPlayerColor(23, 0x7FFF00AA);
	SetPlayerColor(24, 0xA52A2AAA);
	SetPlayerColor(25, 0xFF7F50AA);
	SetPlayerColor(26, 0xB8860BAA);
	SetPlayerColor(27, 0xADFF2FAA);
	SetPlayerColor(28, 0x4B00B0AA);
	SetPlayerColor(29, 0xFFFF82AA);
	SetPlayerColor(30, 0x7CFC00AA);
	SetPlayerColor(31, 0x20B2AAAA);
	SetPlayerColor(32, 0x32CD32AA);
	SetPlayerColor(33, 0x191970AA);
	SetPlayerColor(34, 0x800000AA);
	SetPlayerColor(35, 0xFF4500AA);
	SetPlayerColor(36, 0x2E8B57AA);
	SetPlayerColor(37, 0x00FF7FAA);
	SetPlayerColor(38, 0xFF6347AA);
	SetPlayerColor(39, 0x9ACD32AA);
	SetPlayerColor(40, 0x83BFBFAA);
	SetPlayerColor(41, 0x8B008BAA);
	SetPlayerColor(42, 0x33AA33AA);
	SetPlayerColor(43, 0xAA3333AA);
	SetPlayerColor(44, 0xFFFF00AA);
	SetPlayerColor(45, 0xFF9900AA);
	SetPlayerColor(46, 0x0000BBAA);
	SetPlayerColor(47, 0xFFFFFFAA);
	SetPlayerColor(48, 0x33CCFFAA);
	SetPlayerColor(49, 0xAFAFAFAA);
	SetPlayerColor(50, 0xFF66FFAA);
	SetPlayerColor(51, 0x00BFF3AA);
	SetPlayerColor(52, 0x4B00B0AA);
	SetPlayerColor(53, 0xFFFFFFFF);
	SetPlayerColor(54, 0x8080FFAA);
	SetPlayerColor(55, 0xFF0000AA);
	SetPlayerColor(56, 0xD0D0FFAA);
	SetPlayerColor(57, 0x0066CCAA);
	SetPlayerColor(58, 0x10F441AA);
	SetPlayerColor(59, 0xFF00FFFF);
	SetPlayerColor(60, 0x000080AA);
	SetPlayerColor(61, 0xF0F8FFAA);
	SetPlayerColor(62, 0xDC143CAA);
	SetPlayerColor(63, 0x6495EDAA);
	SetPlayerColor(64, 0xFFE4C4AA);
	SetPlayerColor(65, 0x7FFF00AA);
	SetPlayerColor(66, 0xA52A2AAA);
	SetPlayerColor(67, 0xFF7F50AA);
	SetPlayerColor(68, 0xB8860BAA);
	SetPlayerColor(69, 0xADFF2FAA);
	SetPlayerColor(70, 0x4B00B0AA);
	SetPlayerColor(71, 0xFFFF82AA);
	SetPlayerColor(72, 0x7CFC00AA);
	SetPlayerColor(73, 0x20B2AAAA);
	SetPlayerColor(74, 0x32CD32AA);
	SetPlayerColor(75, 0x191970AA);
	SetPlayerColor(76, 0x800000AA);
	SetPlayerColor(77, 0xFF4500AA);
	SetPlayerColor(78, 0x2E8B57AA);
	SetPlayerColor(79, 0x00FF7FAA);
	SetPlayerColor(80, 0xFF6347AA);
	SetPlayerColor(81, 0x9ACD32AA);
	SetPlayerColor(82, 0x83BFBFAA);
	SetPlayerColor(83, 0x8B008BAA);
	SetPlayerColor(84, 0x000000AA);
	SetPlayerColor(85, 0xAA3333AA);
	SetPlayerColor(86, 0xFFFF00AA);
	SetPlayerColor(87, 0xFF9900AA);
	SetPlayerColor(88, 0x0000BBAA);
	SetPlayerColor(89, 0xFFFFFFAA);
	SetPlayerColor(90, 0x33CCFFAA);
	SetPlayerColor(91, 0xAFAFAFAA);
	SetPlayerColor(92, 0xFF66FFAA);
	SetPlayerColor(93, 0x00BFF3AA);
	SetPlayerColor(94, 0x4B00B0AA);
	SetPlayerColor(95, 0xFFFFFFFF);
	SetPlayerColor(96, 0x8080FFAA);
	SetPlayerColor(97, 0xFF0000AA);
	SetPlayerColor(98, 0xD0D0FFAA);
	SetPlayerColor(99, 0x0066CCAA);
	SetPlayerColor(100, 0x10F441AA);
    
    SetPlayerCheckpoint(playerid,1544.5918,-1338.8467,328.2231,2);
    GameTextForPlayer(playerid, "~g~The Top", 5000, 1);
   	 new string[256];
     new playername[24];
     GetPlayerName(playerid,playername,24);
     format(string, sizeof(string), "~r~%s ~g~spawned", playername);
     GameTextForAll(string,5000,5);
    printf("DMFPF >> Player [%s]/ID: (%d) spawned!",playername,playerid);
    return 1;
}

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////

new PlayerCheckpointStatus[MAX_PLAYERS];

public OnPlayerEnterCheckpoint(playerid) {
new playername[24]; GetPlayerName(playerid,playername,24);
	printf("DMFPF >> Player [%s]/ID: (%d) entered checkpoint",playername,playerid);
	SetPlayerPos(playerid,-2310.3523,-1648.3457,800.7031);
	GivePlayerWeapon(playerid,46,1);
	GameTextForPlayer(playerid, "~g~Mountain", 5000, 1);
 	SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the mountain");
	switch (PlayerCheckpointStatus[playerid]) {
		case CHECKPOINT_A:
		    {
 SetPlayerPos(playerid,-2310.3523,-1648.3457,800.7031);
                 }
	}
	return 1;
}

////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////commands//////////////////////////////////

public OnPlayerCommandText(playerid, cmdtext[])
{
	new playername[24]; GetPlayerName(playerid,playername,24);
	new string[100];
	new playermoney;
	new cmd[256];
    new sendername[MAX_PLAYER_NAME];
    new giveplayer[MAX_PLAYER_NAME];
	new giveplayerid, idx;
    cmd = strtok(cmdtext, idx);
	
if (strcmp(cmdtext, "/mountain", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /mountain",playername,playerid);
        SetPlayerPos(playerid,-2310.3523,-1648.3457,800.7031);
		GivePlayerWeapon(playerid,46,1);
		GameTextForPlayer(playerid, "~g~Mountain", 5000, 1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the mountain");
return 1;
	    }

if (strcmp(cmdtext, "/infmod", true)==0)
	{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /infmod",playername,playerid);
        SendClientMessage(playerid,COLOR_YELLOW,"Commands: /get - to receive parachute for 30$");
        SendClientMessage(playerid,COLOR_YELLOW,"/heal - to get 100% health for 1000$");
        SendClientMessage(playerid,COLOR_YELLOW,"/top - to teleport to the spawn place");
        SendClientMessage(playerid,COLOR_YELLOW,"/mountain - to teleport to the mountain");
        SendClientMessage(playerid,COLOR_YELLOW,"/jumps - mini jumps");
        SendClientMessage(playerid,COLOR_YELLOW,"/classes - to advance to different classes");
        SendClientMessage(playerid,COLOR_YELLOW,"/airp - to teleport to the different airports");
        SendClientMessage(playerid,COLOR_YELLOW,"/me - to 'me' text, /clear - to clear chat, /lock /unlock - for vehicles");
        SendClientMessage(playerid,COLOR_YELLOW,"/gcmd - to gang commands /givecash to give money to other player");
        SendClientMessage(playerid,COLOR_YELLOW,"Parashutes 1.3 - DMFPF (by Toxa)");
        
return 1;
	    }
	    
if (strcmp(cmdtext, "/get", true)==0)
	{

	if(GetPlayerMoney(playerid) < 30) {
	            SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 30$");
	            return 1;
			}
	else if(GetPlayerMoney(playerid) > 29) {
			}
        GivePlayerWeapon(playerid,46,1);
        GivePlayerMoney(playerid,-ParachutePrice);
        SendClientMessage(playerid,COLOR_GREEN,"You have received parashute");
        GameTextForPlayer(playerid, "~g~+ Parachute", 5000, 1);
       	printf("DMFPF >> Player [%s]/ID: (%d) used command /get",playername,playerid);
return 1;
	    }
	    
if (strcmp(cmdtext, "/top", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /top",playername,playerid);
        SetPlayerPos(playerid,1544.7419,-1345.5216,329.4662);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the spawn place");
		GameTextForPlayer(playerid, "~g~The Top", 5000, 1);
		return 1;
	    }

if (strcmp(cmdtext, "/LVA", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /LVA",playername,playerid);
        SetPlayerPos(playerid,304.9069,2499.9163,500.4844);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the Las Venturas Airport");
        GameTextForPlayer(playerid, "~g~Las Venturas Airport", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/LSA", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /LSA",playername,playerid);
        SetPlayerPos(playerid,1728.7621,-2539.6914,600.5469);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the Los Santos Airport");
        GameTextForPlayer(playerid, "~g~Los Santos Airport", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/SFA", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /SFA",playername,playerid);
        SetPlayerPos(playerid,-1254.3024,34.1786,500.1484);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the San Fiero Airport");
        GameTextForPlayer(playerid, "~g~San Fiero Airport", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/jump1", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /jump1",playername,playerid);
        SetPlayerPos(playerid,1959.8629,1906.6580,130.9375);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the foor one");
        GameTextForPlayer(playerid, "~g~The roof one", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/jump2", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /jump2",playername,playerid);
        SetPlayerPos(playerid,2057.5898,2436.9468,165.6172);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the roof two");
        GameTextForPlayer(playerid, "~g~The roof two", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/jump3", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /jump3",playername,playerid);
        SetPlayerPos(playerid,2259.6912,1647.5824,107.8192);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the roof three");
        GameTextForPlayer(playerid, "~g~The foor three", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/jump4", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /jump4",playername,playerid);
        SetPlayerPos(playerid,1481.2794,-1790.2776,156.7533);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the roof four");
        GameTextForPlayer(playerid, "~g~The roof four", 5000, 1);
        return 1;
	    }
	    
	    if (strcmp(cmdtext, "/jump5", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /jump5",playername,playerid);
        SetPlayerPos(playerid,1667.8684,-1243.6362,233.3750);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"You have been teleported to the roof five");
        GameTextForPlayer(playerid, "~g~The foor five", 5000, 1);
        return 1;
	    }
	    
	    	    if (strcmp(cmdtext, "/airp", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /airp",playername,playerid);
        SendClientMessage(playerid,COLOR_YELLOW,"Teleports to the airports:");
        SendClientMessage(playerid,COLOR_RED,"/LVA - Las Venturas Airport");
        SendClientMessage(playerid,COLOR_RED,"/LSA - Los Santos Airport");
        SendClientMessage(playerid,COLOR_RED,"/SFA - San Fiero Airport");

return 1;
	    }
	    
	    if (strcmp(cmdtext, "/jumps", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /jumps",playername,playerid);
        SendClientMessage(playerid,COLOR_YELLOW,"Mini jumps:");
        SendClientMessage(playerid,COLOR_RED,"/jump1");
        SendClientMessage(playerid,COLOR_RED,"/jump2");
        SendClientMessage(playerid,COLOR_RED,"/jump3");
        SendClientMessage(playerid,COLOR_RED,"/jump4");
        SendClientMessage(playerid,COLOR_RED,"/jump5");
        SendClientMessage(playerid,COLOR_YELLOW,"Super Jump:");
        SendClientMessage(playerid,COLOR_RED,"/sjump");
        SendClientMessage(playerid,COLOR_RED,"/ajump");
return 1;
	    }
	    
	    	    if (strcmp(cmdtext, "/classes", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /classes",playername,playerid);
        SendClientMessage(playerid,COLOR_YELLOW,"Advance to classes:");
        SendClientMessage(playerid,COLOR_RED,"/police - Advanced to Police - 10000$");
        SendClientMessage(playerid,COLOR_RED,"/thief - Advanced to Thief - 10000$");
        SendClientMessage(playerid,COLOR_RED,"/gangsta - Advanced to Gangsta - 15000$");
        SendClientMessage(playerid,COLOR_RED,"/fireman - Advanced to Fireman - 10000$");
        SendClientMessage(playerid,COLOR_RED,"/bitch - Advanced to Bitch - 13000$");
        SendClientMessage(playerid,COLOR_RED,"/matrix - Advanced to Matrix - 20000$");
        SendClientMessage(playerid,COLOR_RED,"/worker - Advanced to Worker - 19000$");
return 1;
		}
	    
	    if (strcmp(cmdtext, "/sjump", true)==0)
{
		printf("DMFPF >> Player [%s]/ID: (%d) used command /sjump",playername,playerid);
        SetPlayerPos(playerid,-1254.3024,34.1786,1500.1484);
        GivePlayerWeapon(playerid,46,1);
        SendClientMessage(playerid,COLOR_LIGHTBLUE,"Super Jump!");
        GameTextForPlayer(playerid, "~g~Super Jump!", 5000, 1);
        return 1;
	    }

if (strcmp(cmdtext, "/heal", true)==0)
{

if(GetPlayerMoney(playerid) < 1000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 1000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 999) {
			}
		SetPlayerHealth(playerid,100);
        GivePlayerMoney(playerid,-HealPrice);
        SendClientMessage(playerid,COLOR_GREEN,"Health - 100%");
        GameTextForPlayer(playerid, "~g~+ 100% Health", 5000, 1);
		printf("DMFPF >> Player [%s]/ID: (%d) used command /heal",playername,playerid);
return 1;
	    }


if (strcmp(cmdtext, "/police", true)==0)
{

if(GetPlayerMoney(playerid) < 10000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 10000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 9999) {
			}
		GivePlayerMoney(playerid,-PolicePrice);
		SetPlayerHealth(playerid,100);
		SetPlayerSkin(playerid,284);
		GivePlayerWeapon(playerid,3,1);
		GivePlayerWeapon(playerid,24,100);
		GivePlayerWeapon(playerid,32,150);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Policeman");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /police",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~policeman", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
		}
	    
	    
	    if (strcmp(cmdtext, "/thief", true)==0)
{

if(GetPlayerMoney(playerid) < 10000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 10000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 9999) {
			}
		GivePlayerMoney(playerid,-ThiefPrice);
		SetPlayerHealth(playerid,100);
		SetPlayerSkin(playerid,217);
		GivePlayerWeapon(playerid,4,1);
		GivePlayerWeapon(playerid,23,100);
		GivePlayerWeapon(playerid,33,100);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Thief");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /thief",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~thief", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
		}

if (strcmp(cmdtext, "/gangsta", true)==0)
{

if(GetPlayerMoney(playerid) < 15000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 15000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 14999) {
			}
        GivePlayerMoney(playerid,-GangstaPrice);
 		SetPlayerHealth(playerid,100);
        SetPlayerSkin(playerid,249);
		GivePlayerWeapon(playerid,5,1);
		GivePlayerWeapon(playerid,29,150);
		GivePlayerWeapon(playerid,30,200);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Gangsta");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /gangsta",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~gangsta", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
		}


if (strcmp(cmdtext, "/fireman", true)==0)
{

if(GetPlayerMoney(playerid) < 10000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 10000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 9999) {
			}
		GivePlayerMoney(playerid,-FiremanPrice);
		SetPlayerHealth(playerid,130);
		SetPlayerSkin(playerid,279);
		GivePlayerWeapon(playerid,9,1);
		GivePlayerWeapon(playerid,42,500);
		GivePlayerWeapon(playerid,25,150);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Fireman");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /fireman",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~fireman", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
		}


if (strcmp(cmdtext, "/bitch", true)==0)
{

if(GetPlayerMoney(playerid) < 13000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 13000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 12999) {
			}
		GivePlayerMoney(playerid,-BitchPrice);
		SetPlayerHealth(playerid,100);
		SetPlayerSkin(playerid,256);
		GivePlayerWeapon(playerid,10,1);
		GivePlayerWeapon(playerid,22,100);
		GivePlayerWeapon(playerid,27,150);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Bitch");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /bitch",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~bitch", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
		}



if (strcmp(cmdtext, "/matrix", true)==0)
{

if(GetPlayerMoney(playerid) < 20000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 20000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 19999) {
			}
		GivePlayerMoney(playerid,-MatrixPrice);
		SetPlayerHealth(playerid,120);
		SetPlayerSkin(playerid,294);
		GivePlayerWeapon(playerid,8,1);
		GivePlayerWeapon(playerid,28,200);
		GivePlayerWeapon(playerid,31,200);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Matrix");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /matrix",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~matrix", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
		}
	    
	    if (strcmp(cmdtext, "/worker", true)==0)
{

if(GetPlayerMoney(playerid) < 19000) {
	SendClientMessage(playerid,COLOR_ORANGE,"Not enough money. You need 19000$");
return 1;
			}
else if(GetPlayerMoney(playerid) > 18999) {
			}
		GivePlayerMoney(playerid,-WorkerPrice);
		SetPlayerHealth(playerid,130);
		SetPlayerSkin(playerid,260);
		GivePlayerWeapon(playerid,6,1);
		GivePlayerWeapon(playerid,25,200);
		GivePlayerWeapon(playerid,30,200);
        SendClientMessage(playerid,COLOR_GREEN,"Advanced to Worker");
		printf("DMFPF >> Player [%s]/ID: (%d) used command /worker",playername,playerid);
		format(string, 100,"~r~%s ~g~advanced to ~b~worker", playername);
		GameTextForAll(string, 5000, 5);
		return 1;
	    }


 if(strcmp(cmdtext,"/clear",true)==0) {
 	printf("DMFPF >> Player [%s]/ID: (%d) used command /clear",playername,playerid);
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
	SendClientMessage(playerid,COLOR_YELLOW," ");
 	SendClientMessage(playerid,COLOR_YELLOW," ");
 	return 1;
		}
		
		
		if(strcmp(cmdtext, "/ajump", true) == 0) {

		printf("DMFPF >> Player [%s]/ID: (%d) used command /ajump",playername,playerid);
if(IsPlayerInAnyVehicle(playerid)) {
	new Float:X;
	new Float:Y;
	new Float:Z;
	new VehicleID;
	GetPlayerPos(playerid, X, Y, Z);
	VehicleID = GetPlayerVehicleID(playerid);
	SetVehiclePos(VehicleID, X, Y, Z + 200);
	GivePlayerWeapon(playerid,46,1);
	SetPlayerInterior(playerid,0);
	GameTextForPlayer(playerid, "~g~Auto Jump!",5000,5);
} else {
	new Float:X;
	new Float:Y;
	new Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	SetPlayerPos(playerid, X, Y, Z + 200);
	GivePlayerWeapon(playerid,46,1);
	SetPlayerInterior(playerid,0);
	GameTextForPlayer(playerid, "~g~Big Jump!",5000,5);

}
return 1;
}
////////////////////////////////////////////////////////////////////////////////



   if(strcmp(cmd, "/givemoney", true) == 0) {
       new tmp[256];
      tmp = strtok(cmdtext, idx);

      if(!strlen(tmp)) {
         SendClientMessage(playerid, COLOR_RED, "Usage: /givemoney [playerid] [amount]");
         return 1;
      }
      giveplayerid = strval(tmp);

      tmp = strtok(cmdtext, idx);
      if(!strlen(tmp)) {
         SendClientMessage(playerid, COLOR_RED, "Usage: /givemoney [playerid] [amount]");
         return 1;
      }

       moneys = strval(tmp);
      if (IsPlayerConnected(giveplayerid)) {
         GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
         GetPlayerName(playerid, sendername, sizeof(sendername));
         playermoney = GetPlayerMoney(playerid);
         if (moneys > 0 && playermoney >= moneys) {
            GivePlayerMoney(playerid, (0 - moneys));
            GivePlayerMoney(giveplayerid, moneys);
            format(string, sizeof(string), "You have sent %s (id: %d), $%d.", giveplayer,giveplayerid, moneys);
            SendClientMessage(playerid, 0xFFFF00AA, string);
            format(string, sizeof(string), "You have recieved $%d from %s (id: %d).", moneys, sendername, playerid);
            SendClientMessage(giveplayerid, 0xFFFF00AA, string);
            printf("%s(playerid:%d) has transfered %d to %s(playerid:%d)",sendername, playerid, moneys, giveplayer, giveplayerid);
         }
         else {
            SendClientMessage(playerid, 0xFFFF00AA, "Invalid transaction amount.");
         }
      }
      else {
            format(string, sizeof(string), "%d is not an active player.", giveplayerid);
            SendClientMessage(playerid, 0xFFFF00AA, string);
         }
      return 1;
   }


//"me" text
if(strcmp(cmdtext, "/me", true, 3)==0) {

format(string, 256, "> %s %s", playername, cmdtext[4]);
SendClientMessageToAll(COLOR_LIGHTBLUE, string);
printf("DMFPF >> [%s]/ID:(%d) %s",playername,playerid,cmdtext[4]);
return 1;
}

//commands for gangs
    	if(strcmp(cmd, "/gcmd", true) == 0) {
		SendClientMessage(playerid, COLOR_GREEN,"Gang commands:");
		SendClientMessage(playerid, COLOR_YELLOW,"/gang create [name of a gang]");
		SendClientMessage(playerid, COLOR_YELLOW,"/gang join");
		SendClientMessage(playerid, COLOR_YELLOW,"/gang invite [playerID]");
		SendClientMessage(playerid, COLOR_YELLOW,"/gang quit");
		SendClientMessage(playerid, COLOR_YELLOW,"/ganginfo [number] (no number given shows your gang's info)");
		SendClientMessage(playerid, COLOR_YELLOW,"/gbank [money], /gwithdraw [money], /gbalance");
	printf("DMFPF >> Player [%s]/ID: (%d) used command /gcmd",playername,playerid);
		return 1;
	}

//command: "gang"

	if(strcmp(cmd, "/gang", true) == 0) {
	    new tmp[256];
	    new gangcmd, gangnum;
		tmp = strtok(cmdtext, idx);

		if(!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_RED, "Usage: /gang [create/join/invite/quit] [name/number]");
			return 1;
		}
		giveplayerid = strval(tmp);

		if(strcmp(tmp, "create", true)==0)
		    gangcmd = 1;
		else if(strcmp(tmp, "invite", true)==0)
		    gangcmd = 2;
		else if(strcmp(tmp, "join", true)==0)
		    gangcmd = 3;
		else if(strcmp(tmp, "quit", true)==0)
		    gangcmd = 4;

		tmp = strtok(cmdtext, idx);
		if(gangcmd < 3 && !strlen(tmp)) {
		    if(gangcmd==0)
				SendClientMessage(playerid, COLOR_RED, "Usage: /gang [create/join/invite/quit] [name/number]");
			else if(gangcmd==1)
				SendClientMessage(playerid, COLOR_RED, "Usage: /gang [create] [name]");
			else if(gangcmd==2)
				SendClientMessage(playerid, COLOR_RED, "Usage: /gang [invite] [playerID]");
			return 1;
		}

//command to create gangs
		if(gangcmd==1) {
		    if(playerGang[playerid]>0) {
				SendClientMessage(playerid, COLOR_RED, "You are already in a gang!");
				return 1;
		    }

			for(new i = 1; i < MAX_GANGS; i++) {
				if(gangInfo[i][0]==0) {

					format(gangNames[i], MAX_GANG_NAME, "%s", tmp);
					gangInfo[i][0]=1;
					gangInfo[i][1]=1;

					new string1[256];
					gangMembers[i][0] = playerid;
					format(string, sizeof(string),"You have created the gang '%s' (id: %d)", gangNames[i], i);
					format(string1, sizeof(string1),"~b~Created gang ~r~'%s' ~g~(id: %d)", gangNames[i], i);
					SendClientMessage(playerid, COLOR_GREEN, string);
					GameTextForAll(string1,5000,5);
					playerGang[playerid]=i;
					return 1;
				}
			}

			return 1;

//command to join gang
		} else if (gangcmd==3) {
	 		gangnum = gangInvite[playerid];

		    if(playerGang[playerid]>0) {
				SendClientMessage(playerid, COLOR_RED, "You are already in a gang!");
				return 1;
		    }
	 		if(gangInvite[playerid]==0) {
				SendClientMessage(playerid, COLOR_RED, "You have not been invited to a gang.");
				return 1;
			}
			if(gangInfo[gangnum][0]==0) {
				SendClientMessage(playerid, COLOR_RED, "That gang does not exist!");
				return 1;
			}

			if(gangInfo[gangnum][1] < MAX_GANG_MEMBERS) {
			    new i = gangInfo[gangnum][1];

				gangInvite[playerid]=0;

				gangMembers[gangnum][i] = playerid;

			    GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				for(new j = 0; j < gangInfo[gangnum][1]; j++) {
					format(string, sizeof(string),"%s has joined your gang.", sendername);
					SendClientMessage(gangMembers[gangnum][j], COLOR_ORANGE, string);
					new string2[256];
					format(string2, sizeof(string2),"~b~%s ~g~has joined gang - ~r~'%s'.", sendername,gangNames[i]);
					GameTextForAll(string2,5000,5);
				}

				gangInfo[gangnum][1]++;
				playerGang[playerid] = gangnum;
				
				SetPlayerColor(playerid,gangInfo[gangnum][2]);

				format(string, sizeof(string),"You have joined the gang '%s' (id: %d)", gangNames[gangnum], gangnum);
				SendClientMessage(playerid, COLOR_GREEN, string);

				return 1;
			}

			SendClientMessage(playerid, COLOR_RED, "That gang is full.");
			return 1;

//command to invite gang
		} else if (gangcmd==2) {
	 		giveplayerid = strval(tmp);

			if(playerGang[playerid]==0) {
				SendClientMessage(playerid, COLOR_RED, "You are not in a gang!");
				return 1;
			}

			if(IsPlayerConnected(giveplayerid)) {
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));

				format(string, sizeof(string),"You have sent a gang invite to %s.", giveplayer);
				SendClientMessage(playerid, COLOR_GREEN, string);
				format(string, sizeof(string),"You have recieved a gang invite from %s to '%s' (id: %d)", sendername, gangNames[playerGang[playerid]],playerGang[playerid]);
				SendClientMessage(giveplayerid, COLOR_GREEN, string);

				gangInvite[giveplayerid]=playerGang[playerid];

			} else
				SendClientMessage(playerid, COLOR_RED, "No such player exists!");

//command to leave gang
		} else if (gangcmd==4) {
		    PlayerLeaveGang(playerid);
		}

		return 1;
	}

//command "ganginfo"

	if(strcmp(cmd, "/ganginfo", true) == 0) {
	    new tmp[256];
	    new gangnum;
		tmp = strtok(cmdtext, idx);

		if(!strlen(tmp) && playerGang[playerid]==0) {
			SendClientMessage(playerid, COLOR_RED, "Usage: /ganginfo [number]");
			return 1;
		} else if (!strlen(tmp))
			gangnum = playerGang[playerid];
		else
			gangnum = strval(tmp);

		if(gangInfo[gangnum][0]==0) {
			SendClientMessage(playerid, COLOR_RED, "No such gang exists!");
			return 1;
		}

		format(string, sizeof(string),"'%s' Gang Members (id: %d)", gangNames[gangnum], gangnum);
		SendClientMessage(playerid, COLOR_GREEN, string);

		for(new i = 0; i < gangInfo[gangnum][1]; i++) {
			GetPlayerName(gangMembers[gangnum][i], giveplayer, sizeof(giveplayer));
			format(string, sizeof(string),"%s (%d)", giveplayer, gangMembers[gangnum][i]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}

		return 1;
	}

//command "gangs"

	if(strcmp(cmd, "/gangs", true) == 0)
	{
		new x;

		SendClientMessage(playerid, COLOR_GREEN, "Current Gangs:");
	    for(new i=0; i < MAX_GANGS; i++) {
			if(gangInfo[i][0]==1) {
				format(string, sizeof(string), "%s%s(%d) - %d members", string,gangNames[i],i,gangInfo[i][1]);

				x++;
				if(x > 2) {
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    x = 0;
					format(string, sizeof(string), "");
				} else {
					format(string, sizeof(string), "%s, ", string);
				}
			}
		}

		if(x <= 2 && x > 0) {
			string[strlen(string)-2] = '.';
		    SendClientMessage(playerid, COLOR_YELLOW, string);
		}

		return 1;
	}

//command "balance"

	if(strcmp(cmd, "/balance", true) == 0 || strcmp(cmd, "/gbalance", true) == 0) {
		new gang;
		if(strcmp(cmd, "/gbalance", true) == 0)
			gang = 1;

		if(gang && playerGang[playerid]==0) {
			SendClientMessage(playerid, COLOR_RED, "You are not in a gang!");
			return 1;
		}

		if(gang)
			format(string, sizeof(string), "Your gang has $%d in the bank.", gangBank[playerGang[playerid]]);
		else
			format(string, sizeof(string), "You have $%d in the bank.", bank[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, string);

		return 1;
	}

//command "bank"

	if(strcmp(cmd, "/bank", true) == 0 || strcmp(cmd, "/gbank", true) == 0) {
	    new gang;
	    if(strcmp(cmd, "/gbank", true) == 0)
	        gang = 1;

		if(gang && playerGang[playerid]==0) {
			SendClientMessage(playerid, COLOR_RED, "You are not in a gang!");
			return 1;
		}

		new tmp[256];
	    tmp = strtok(cmdtext, idx);

	    if(!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_RED, "Usage: /(g)bank [amount]");
			return 1;
	    }
	    moneys = strval(tmp);

	    if(moneys < 1) {
			SendClientMessage(playerid, COLOR_YELLOW, "Hey what are you trying to pull here.");
			return 1;
		}

		if(GetPlayerMoney(playerid) < moneys) {
			moneys = GetPlayerMoney(playerid);
		}

		GivePlayerMoney(playerid, 0-moneys);

		if(gang)
		    gangBank[playerGang[playerid]]+=moneys;
		else
			bank[playerid]+=moneys;

		if(gang)
			format(string, sizeof(string), "You have deposited $%d, your gang's balance is $%d.", moneys, gangBank[playerGang[playerid]]);
		else
			format(string, sizeof(string), "You have deposited $%d, your current balance is $%d.", moneys, bank[playerid]);

		SendClientMessage(playerid, COLOR_YELLOW, string);

		return 1;
	}

//command "withdraw"

	if(strcmp(cmd, "/withdraw", true) == 0 || strcmp(cmd, "/gwithdraw", true) == 0) {
	    new gang;

		if(strcmp(cmd, "/gwithdraw", true) == 0)
		    gang = 1;

		if(gang && playerGang[playerid]==0) {
			SendClientMessage(playerid, COLOR_RED, "You are not in a gang!");
			return 1;
		}

	    new tmp[256];
	    tmp = strtok(cmdtext, idx);

	    if(!strlen(tmp)) {
			SendClientMessage(playerid, COLOR_RED, "Usage: /(g)withdraw [amount]");
			return 1;
	    }
	    moneys = strval(tmp);

	    if(moneys < 1) {
			SendClientMessage(playerid, COLOR_YELLOW, "Hey what are you trying to pull here.");
			return 1;
		}

	    if(gang) {
			if(moneys > gangBank[playerGang[playerid]])
			    moneys = gangBank[playerGang[playerid]];
	    } else {
		    if(moneys > bank[playerid])
		        moneys = bank[playerid];
     	}

		GivePlayerMoney(playerid, moneys);
		if(gang)
			gangBank[playerGang[playerid]] -= moneys;
		else
			bank[playerid] -= moneys;

		if(gang)
			format(string, sizeof(string), "You have withdrawn $%d, your gang's balance is $%d.", moneys, gangBank[playerGang[playerid]]);
		else
			format(string, sizeof(string), "You have withdrawn $%d, your current balance is $%d.", moneys, bank[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, string);

		return 1;
   	}
   	
   	if (strcmp(cmd, "/lock", true) == 0) {

			new Float:X;
	new Float:Y;
	new Float:Z;
	new limo = 0;
		if(IsPlayerInAnyVehicle(playerid)) {
			for(new i=0;i<MAX_GV;i++) {
				if(GetPlayerVehicleID(playerid)==GangVehicles[i][0] || GetPlayerVehicleID(playerid)==GangVehicles[i][1]) {
					limo = 1;
					break;
				}
			}
			if(!limo && GetPlayerState(playerid)==PLAYER_STATE_DRIVER) {
				for(new i=0;i<MAX_PLAYERS;i++) {
					if(i!=playerid) {
						SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 1);
					}
				}
				SendClientMessage(playerid, COLOR_GREY, "Vehicle locked.");
				GetPlayerPos(playerid,X,Y,Z);

			} else {
				SendClientMessage(playerid, COLOR_GREY, "You can't lock this vehicle.");
			}
		}
		else {
			SendClientMessage(playerid, COLOR_GREY, "You are not in a vehicle!");
		}
		return 1;
	}


//command "unlock"
	if (strcmp(cmd, "/unlock", true) == 0) {
	new Float:X;
	new Float:Y;
	new Float:Z;

		new limo = 0;
		if(IsPlayerInAnyVehicle(playerid)) {
			for(new i=0;i<MAX_GV;i++) {
				if(GetPlayerVehicleID(playerid)==GangVehicles[i][0] || GetPlayerVehicleID(playerid)==GangVehicles[i][1]) {
					limo = 1;
					break;
				}
			}
			if(!limo && GetPlayerState(playerid)==PLAYER_STATE_DRIVER) {
				for(new i=0;i<MAX_PLAYERS;i++) {
					if(i!=playerid) {
						SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid),i, 0, 0);
					}
				}
				SendClientMessage(playerid, COLOR_GREY, "Vehicle unlocked.");
				GetPlayerPos(playerid,X,Y,Z);
				PlayerPlaySound(playerid,1057,X,Y,Z);
			} else {
				SendClientMessage(playerid, COLOR_GREY, "You can't unlock this vehicle.");
			}
		} else {
			SendClientMessage(playerid, COLOR_GREY, "You are not in a vehicle!");
		}
		return 1;
	}

	return 0;
}

//------------------------------------------------------------------------------------------------------

////////////////////////////////Leave Player Gang///////////////////////////////
public PlayerLeaveGang(playerid) {
	new string[256];
	new playername[MAX_PLAYER_NAME];
	new gangnum = playerGang[playerid];

    if(gangnum > 0) {
		for(new i = 0; i < gangInfo[gangnum][1]; i++) {
			if(gangMembers[gangnum][i]==playerid) {
			    gangInfo[gangnum][1]--;

      		    for(new j = i; j < gangInfo[gangnum][1]; j++) {
				    gangMembers[gangnum][j]=gangMembers[gangnum][j+1];
	    		}
			    if(gangInfo[gangnum][1]<1) {
			        gangInfo[gangnum][0]=0;
			        gangInfo[gangnum][1]=0;
			        gangBank[gangnum]=0;
       			}
				for(new j = 0; j < gangInfo[gangnum][1]; j++) {
				    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
					format(string, sizeof(string),"%s has quit your gang.", playername);
					SendClientMessage(gangMembers[gangnum][j], COLOR_ORANGE, string);
				}

				format(string, sizeof(string),"You have quit the gang '%s' (id: %d)", gangNames[gangnum], gangnum);
				SendClientMessage(playerid, COLOR_ORANGE, string);

				playerGang[playerid]=0;
				return;
			}}} else {
		SendClientMessage(playerid, COLOR_RED, "You are not in a gang.");
	}}

//----------------------------------------------------------------------------//


public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    
		GivePlayerMoney(playerid,CarMoney);
        SendClientMessage(playerid,COLOR_GREEN,"You have founded 20$ in the vehicle.");
        GameTextForPlayer(playerid, "~g~bonus! + 20$", 5000, 1);
        
    return 1;
}

////////////////////////////////////////////////////////////////////////////////

public OnPlayerDisconnect(playerid) {
     new string[256];
     new playername[24];
     GetPlayerName(playerid,playername,24);
     format(string, sizeof(string), "~r~%s ~g~leaved", playername);
     GameTextForAll(string,5000,5);
     return 1;
}

////////////////////////////////////////////////////////////////////////////////

public OnPlayerDeath(playerid, killerid, reason)
{

   	SetPlayerScore(killerid,GetPlayerScore(killerid)+1);
	GivePlayerMoney(killerid,KillMoney);
    SendDeathMessage(killerid, playerid, reason);
    
    //messages on screen
    if (GetPlayerScore(killerid) < 1) {
    return 1;
    }
    
   	new string[256];
	new playername[24]; GetPlayerName(playerid, playername, 24);
	new killername[24]; GetPlayerName(killerid, killername, 24);

if (GetPlayerScore(killerid) > 0) {
		if (GetPlayerScore(killerid) == 2) {
	   GameTextForPlayer(killerid, "~g~Double Kill!", 5000, 5);
	 		}
		else if (GetPlayerScore(killerid) == 3) {
	   GameTextForPlayer(killerid, "~g~Triple Kill!", 5000, 5);
	 		}
		else if (GetPlayerScore(killerid) == 5) {
	   GivePlayerMoney(killerid, 1000);
	   GameTextForPlayer(killerid, "~b~Ultra Kill!", 5000, 5);
	 		}
    	else if (GetPlayerScore(killerid) == 7) {
	   GivePlayerMoney(killerid, 3000);
	   GameTextForPlayer(killerid, "~b~Monster Kill!", 5000, 5);
	 	 	}
    	else if (GetPlayerScore(killerid) == 10) {
	   	GivePlayerMoney(killerid, 5000);
	   	SetPlayerHealth(killerid, 100);
   		format(string, sizeof(string), "~r~%s ~g~is Gangsta!", killername);
    	GameTextForAll(string,5000,5);
	 	 	}
       	else if (GetPlayerScore(killerid) == 15) {
	   GivePlayerMoney(killerid, 10000);
	   SetPlayerHealth(killerid, 100.0);
	   GivePlayerWeapon(killerid, 31, 300);
	   GivePlayerWeapon(killerid, 28, 200);
	   GivePlayerWeapon(killerid, 24, 30);
	   format(string, sizeof(string), "~r~%s ~b~is God Like!", killername);
 		GameTextForAll(string,5000,5);
	   		}
	   else if (GetPlayerScore(killerid) == 20) {
	   GivePlayerMoney(killerid, 20000);
	   SetPlayerHealth(killerid, 150.0);
	   GivePlayerWeapon(killerid, 31, 300);
       GivePlayerWeapon(killerid, 26, 20);
	   GivePlayerWeapon(killerid, 28, 200);
   		format(string, sizeof(string), "~r~%s is Unstopable!", killername);
   		GameTextForAll(string,5000,5);
	  		}
	  		}
    return 1;
}

////////////////////////////////////////////////////////////////////////////////

//---------------------------------end of script------------------------------//
